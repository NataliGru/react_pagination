{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","items","perPage","currentPage","itemsStartRange","itemsEndRange","onPageChange","pageNumbers","Math","ceil","isFirstPageActive","isLastPageActive","at","visibleItems","filter","_","index","className","classNames","disabled","onClick","href","map","page","active","handlePageChange","length","item","App","useState","itemsOnPage","setItemsOnPage","setCurrentPage","min","value","onChange","event","target","id","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCMIG,EAA8B,SAAC,GAUtC,IARFC,EAQC,EARDA,MACAC,EAOC,EAPDA,MACAC,EAMC,EANDA,QACAC,EAKC,EALDA,YACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,aAGIC,EAAed,EAAW,EAC9Be,KAAKC,KAAKT,EAAQE,IAGdQ,EAAoC,IAAhBP,EACpBQ,EAAmBR,IAAgBI,EAAYK,IAAI,GAoBnDC,EAAeZ,EAAMa,QAAO,SAACC,EAAGC,GAAJ,OAChCA,GAAUZ,EAAkB,GACzBY,GAAUX,EAAgB,KAG/B,OACE,qCACE,qBAAIY,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YACpB,CAAEC,SAAUT,IAFhB,SAIE,mBACEU,QAnBmB,WACvBjB,EAAc,GAChBG,EAAaH,EAAc,IAkBrB,UAAQ,WACRc,UAAU,YACVI,KAAK,QACL,gBAAeX,EALjB,oBAWDH,EAAYe,KAAI,SAACC,GAAD,OACf,oBAEEN,UAAWC,IAAW,YACpB,CAAEM,OAAQD,IAASpB,IAHvB,SAKE,mBACEiB,QAAS,kBAhDI,SAACG,GACpBA,IAASpB,GACXG,EAAaiB,GA8CUE,CAAiBF,IAChC,UAAQ,WACRN,UAAU,YACVI,KAAI,WAAME,GAJZ,SAMGA,KAVEA,MAeT,oBAAIN,UAAWC,IAAW,YACxB,CAAEC,SAAUR,IADd,SAGE,mBACES,QAxDmB,WACvBjB,EAAcI,EAAYmB,QAC5BpB,EAAaH,EAAc,IAuDrB,UAAQ,WACRc,UAAU,YACVI,KAAK,QACL,gBAAeV,EALjB,uBAYJ,6BACGE,EAAaS,KAAI,SAAAK,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCnG5B1B,EAAQR,EAAW,EAAG,IACzB6B,KAAI,SAAAzB,GAAC,qBAAYA,MAEP+B,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB6B,EAApB,KAEM5B,EACHD,EAAc2B,GAAgBA,EAAc,GAGzCzB,EAAgBG,KAAKyB,IACzB9B,EAAc2B,EAAa7B,EAAMyB,QAGnC,OACE,sBAAKT,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWd,EADX,mBACiCC,EADjC,cACsDC,EADtD,eAC0EJ,EAAMyB,OADhF,OAIA,sBAAKT,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEiB,MAAOJ,EACPK,SACE,SAAAC,GACEL,GAAgBK,EAAMC,OAAOH,OAC7BF,EAAe,IAGnB,UAAQ,kBACRM,GAAG,kBACHrB,UAAU,eAVZ,UAYE,wBAAQiB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEjB,MAAOC,EAAMyB,OACbzB,MAAOA,EACPC,QAAS4B,EACT3B,YAAaA,EACbC,gBAAiBA,EACjBC,cAAeA,EACfC,aAAc0B,QC5DtBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.62e93146.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  items: string[];\n  perPage: number;\n  currentPage: number;\n  itemsStartRange: number;\n  itemsEndRange: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    items,\n    perPage,\n    currentPage,\n    itemsStartRange,\n    itemsEndRange,\n    onPageChange,\n  },\n) => {\n  const pageNumbers = (getNumbers(1,\n    Math.ceil(total / perPage))\n  );\n\n  const isFirstPageActive = currentPage === 1;\n  const isLastPageActive = currentPage === pageNumbers.at(-1);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handleNextPageChange = () => {\n    if (currentPage < pageNumbers.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrevPageChange = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const visibleItems = items.filter((_, index) => (\n    index >= (itemsStartRange - 1)\n    && index <= (itemsEndRange - 1)\n  ));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item',\n            { disabled: isFirstPageActive })}\n        >\n          <a\n            onClick={handlePrevPageChange}\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPageActive}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map((page) => (\n          <li\n            key={page}\n            className={classNames('page-item',\n              { active: page === currentPage })}\n          >\n            <a\n              onClick={() => handlePageChange(page)}\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={classNames('page-item',\n          { disabled: isLastPageActive })}\n        >\n          <a\n            onClick={handleNextPageChange}\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPageActive}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemsStartRange = (\n    (currentPage * itemsOnPage) - (itemsOnPage - 1)\n  );\n\n  const itemsEndRange = Math.min(\n    currentPage * itemsOnPage, items.length,\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsStartRange} - ${itemsEndRange} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={itemsOnPage}\n            onChange={\n              event => {\n                setItemsOnPage(+event.target.value);\n                setCurrentPage(1);\n              }\n            }\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        items={items}\n        perPage={itemsOnPage}\n        currentPage={currentPage}\n        itemsStartRange={itemsStartRange}\n        itemsEndRange={itemsEndRange}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}